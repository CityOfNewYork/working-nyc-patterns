//
// Variables
//

// Dependencies
@use 'config/tokens' as *;
@use 'config/grid' as *;
@use 'config/color';
@use 'config/dimensions';
@use 'config/direction';
@use 'config/typography';
@use 'scss/functions/rem';

// Declaration
$buttons: map-get($tokens, 'buttons');
$inner-size: map-get($buttons, 'inner-size');
$radius: map-get($buttons, 'radius');
$radius-tag: map-get($buttons, 'radius-tag');

@mixin reset() {
  color: inherit;
  font-size: inherit;
  font-weight: inherit;
  font-family: inherit;
  background: transparent;
  border: none;
  padding: 0;
  overflow: visible;
  cursor: pointer;
}

@mixin normal() {
  @include typography.set('button');
  line-height: $inner-size;
  padding: ($grid * 2) dimensions.$spacing-base;
  cursor: pointer;

  * {
    pointer-events: none;
  }
}

@mixin base() {
  @include normal();

  appearance: none;
  background-color: lightgrey;
  border: 0;
  border-radius: $radius;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  text-align: center;
  text-decoration: none;
  cursor: pointer;

  transition: background .2s ease-in, color .2s ease-in;

  > [class*='icon'] {
    width: 1rem;
    height: 1rem
  }

  > [class*='icon']:first-child {
    // margin-#{direction.$start}: -($grid / 2);
    margin-#{direction.$end}: $grid * 0.75;
  }

  > [class*='icon']:last-child {
    margin-#{direction.$start}: $grid * 0.75;
    // margin-#{direction.$end}: -($grid / 2);
  }
}

@mixin icon-toggle() {
  &[aria-pressed='false'] {
    .icon {
      display: inline-block;
    }

    .icon-pressed {
      display: none;
    }
  }

  &[aria-pressed='true'] {
    .icon {
      display: none;
    }

    .icon-pressed {
      display: inline-block;
    }
  }
}

@mixin next() {
  @if direction.$direction == 'ltr' {
    > [class*='icon']:first-child {
      display: none
    }
  } @else {
    > [class*='icon']:last-child {
      display: none
    }
  }
}

@mixin previous() {
  @if direction.$direction == 'ltr' {
    > [class*='icon']:last-child {
      display: none
    }
  } @else {
    > [class*='icon']:first-child {
      display: none
    }
  }
}

@mixin tag() {
  font-size: map-get(typography.$font-size, 'small');
  text-transform: uppercase;

  padding: $grid ($grid * 2);
  border-radius: map-get($buttons, 'radius-tag');
}

@mixin toggle() {
  text-align: direction.$start;

  display: flex;
  justify-content: space-between;
  align-items: center;

  > [class*='icon'] {
    transition: transform 0.25s
  }

  &.active {
    > [class*='icon'] {
      transform: rotate(-180deg)
    }
  }
}

@mixin small() {
  font-size: map-get(typography.$font-size, 'small');

  padding: ($grid / 2) $grid;
}

@mixin link() {
  @include typography.font-family('body');

  font-size: inherit;
  text-align: inherit;
  line-height: normal;

  appearance: none;
  border: none;
  background: transparent !important;
  padding: 0;
  border-radius: 0;

  > [class*='icon']:first-child {
    margin-#{direction.$start}: initial;
  }

  > [class*='icon']:last-child {
    margin-#{direction.$end}: initial;
  }
}

@mixin text() {
  text-align: inherit;
  background: none;
  border: 0;
  border-radius: 0;
  padding: 0;

  > [class*='icon']:first-child {
    margin-#{direction.$start}: initial;
  }

  > [class*='icon']:last-child {
    margin-#{direction.$end}: initial;
  }
}